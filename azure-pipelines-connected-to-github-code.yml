# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net
# Basic build pipeline for windows forms application

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: PowerShell@2
#   inputs:
#     filePath: 'DemoApp/DemoApp/buildTools/UpdateClickonceVersionNumberInProjectFile.ps1'
#     arguments: '-ProjectFile DemoApp.csproj -BuildSystemsBuildId $(Build.BuildId)'
#     workingDirectory: 'DemoApp/DemoApp'

# - task: PowerShell@2
#   inputs:
#     filePath: 'WindowsFormsApp1/WindowsFormsApp1/buildTools/UpdateClickonceVersionNumberInProjectFile.ps1'
#     arguments: '-ProjectFile WindowsFormsApp1.csproj -BuildSystemsBuildId $(Build.BuildId)'
#     workingDirectory: 'WindowsFormsApp1/WindowsFormsApp1'



- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/target:publish'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: CopyFiles@2
#   inputs:
#     SourceFolder: 'DemoApp\\DemoApp\\bin\\Release'
#     Contents: '**'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Fetch environment-specific window title from a variable or parameter
      $windowTitle = "Yashwant3"
      
      # Path to the ClickOnce application manifest (.application file)
      $manifestPath = "DemoApp.application"
      
      # Check if the manifest file exists
      if (Test-Path $manifestPath) {
          # Update the ClickOnce manifest (.application file)
          [xml]$manifestXml = Get-Content -Path $manifestPath
          $manifestXml.Assembly.Description = "Your Application Description"
          $manifestXml.EntryPoint.Identity = $windowTitle
          $manifestXml.Save($manifestPath)
      
          Write-Host "Window title updated to: $windowTitle"
      }
      else {
          Write-Host "Manifest file not found."
      }
    workingDirectory: 'DemoApp/DemoApp/bin/publish'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'DemoApp\\DemoApp\\bin\\publish'
    Contents: '**\*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

